# -*- coding: utf-8 -*-
"""denoising_perecent_fibrosis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/139UsONhW8q2TYrftQtvanA7CpEKhWyI9
"""

import os

import cv2
import numpy as np
from matplotlib import pyplot as plt

from scipy.ndimage import generic_filter
from scipy import stats
import tifffile

# from google.colab import drive
# drive.mount('/content/drive')

# reading the image
IMG_DIR = "/home/pattonw/Rachel/Mittallab/fibrosis_score_pipeline_testing/4-class_full_preds"
pred_patch_width, pred_patch_height = 48, 48 

bin_img = "/home/pattonw/Rachel/Mittallab/fibrosis_score_pipeline_testing/preds_w_contrast_adj/cluster_BR21-2023-B-A-1-9-TRICHROME - 2022-11-09 14.48.18_39000_34000_size4000_4000/4_clusters/mask_finished_napari_4classmodel_originalimage.tiff"

tiff = tifffile.imread(bin_img)[::48, ::48]
# 1:9 == 1:9:1
# 1:10:2 == (1,3,5,7,9)
#denoised_img = cv2.medianBlur(tiff, 91)
#denoised_img = cv2.bilateralFilter(tiff, 144, 150, 150)
#tifffile.imwrite("/home/pattonw/Rachel/Mittallab/fibrosis_score_pipeline_testing/4-class_full_preds/test.tiff", denoised_img)

gloms = tiff == 2
tifffile.imwrite("/home/pattonw/Rachel/Mittallab/fibrosis_score_pipeline_testing/4-class_full_preds/gloms.tiff", gloms)

gloms_blurr = cv2.GaussianBlur(gloms.astype(np.float64),(21,21),0)
tifffile.imwrite("/home/pattonw/Rachel/Mittallab/fibrosis_score_pipeline_testing/4-class_full_preds/glomsblurr.tiff", gloms_blurr)

"""
# Create image list
images = [
    os.path.join(IMG_DIR, img)
    for img in os.listdir(IMG_DIR)
    if img.lower().endswith((".tif", ".tiff"))
]

for img in images: 
    print(img)
    img = cv2.imread(img)

    # converting BGR back to RGB and then denoising using median filtering
    rgb_img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)

    # denoising

    denoised_img = cv2.medianBlur(rgb_img, 101)
    # denoised_img = cv2.bilateralFilter(rgb_img, 144, 150, 150) 
    #denoised_img = cv2.GaussianBlur()

    # visualizing the results of denoising
    plt.subplot(121), plt.imshow(rgb_img)
    plt.subplot(122), plt.imshow(denoised_img)
    plt.show()

# save denoised image as png
img_name = os.path.splitext(os.path.basename(IMG_DIR))[0]
cv2.imwrite(f"/home/riware/Desktop/{img_name}.png",cv2.cvtColor(denoised_img, cv2.COLOR_RGB2BGR))

# calculating the % fibrosis
fibrosis = 0
remaining = 0
for i, j in np.ndindex(denoised_img.shape[:-1]):
    if denoised_img[i][j][0] == 82:
        fibrosis += 1
    if denoised_img[i][j][0] == 255:
        remaining += 1
percent_fibrosis = fibrosis * 100 / (remaining + fibrosis)
print("fibrosis=" + str(fibrosis) + ", not_fibrosis=" + str(remaining))
print("%fibrosis=" + str(percent_fibrosis))

print("%fibrosis=" + str(percent_fibrosis))"""
